// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace AutomatedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// TenDangNhapRong - Use 'TenDangNhapRongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void TenDangNhapRong()
        {
            #region Variable Declarations
            WinEdit uITênđăngnhậpkhôngđượcEdit = this.UIĐăngkýMozillaFirefoxWindow.UIItemCell.UITênđăngnhậpkhôngđượcEdit;
            #endregion

            // Verify that the 'ControlType' property of 'Tên đăng nhập không được để trống.' text box equals 'Tên đăng nhập không được để trống'
            Assert.AreEqual(this.TenDangNhapRongExpectedValues.UITênđăngnhậpkhôngđượcEditControlType, uITênđăngnhậpkhôngđượcEdit.ControlType.ToString());

            // Verify that the 'ControlType' property of 'Tên đăng nhập không được để trống.' text box equals 'Edit'
            Assert.AreEqual(this.TenDangNhapRongExpectedValues.UITênđăngnhậpkhôngđượcEditControlType1, uITênđăngnhậpkhôngđượcEdit.ControlType.ToString());
        }
        
        /// <summary>
        /// RecordedFormSignIn1
        /// </summary>
        public void RecordedFormSignIn1()
        {
            #region Variable Declarations
            WinButton uIĐĂNGKÝButton = this.UIĐăngkýMozillaFirefoxWindow.UIItemCell.UIĐĂNGKÝButton;
            #endregion

            // Click 'ĐĂNG KÝ' button
            Mouse.Click(uIĐĂNGKÝButton, new Point(45, 6));
        }
        
        /// <summary>
        /// AssertMethod_TenDangNhapRong - Use 'AssertMethod_TenDangNhapRongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_TenDangNhapRong()
        {
            #region Variable Declarations
            WinEdit uITênđăngnhậpkhôngđượcEdit = this.UIĐăngkýMozillaFirefoxWindow.UIItemCell.UITênđăngnhậpkhôngđượcEdit;
            #endregion

            // Verify that the 'ControlType' property of 'Tên đăng nhập không được để trống.' text box is not equal to '"Tên đăng nhập không được để trống."'
            Assert.AreNotEqual(this.AssertMethod_TenDangNhapRongExpectedValues.UITênđăngnhậpkhôngđượcEditControlType, uITênđăngnhậpkhôngđượcEdit.ControlType.ToString());
        }
        
        /// <summary>
        /// RecordedMethod_MatKhauRong
        /// </summary>
        public void RecordedMethod_MatKhauRong()
        {
            #region Variable Declarations
            WinEdit uIĐăngkýEdit = this.UITrangchủMozillaFirefWindow1.UIĐăngkýHyperlink.UIĐăngkýEdit;
            WinEdit uIItemEdit = this.UITrangchủMozillaFirefWindow2.UIItemCell.UIItemEdit;
            WinListItem uIUyeneListItem = this.UIItemWindow.UIItemList.UIUyeneListItem;
            WinButton uIĐĂNGKÝButton = this.UITrangchủMozillaFirefWindow3.UIItemCell.UIĐĂNGKÝButton;
            #endregion

            // Click 'Đăng ký' text box
            Mouse.Click(uIĐăngkýEdit, new Point(41, 16));

            // Click text box
            Mouse.Click(uIItemEdit, new Point(110, 17));

            // Click 'Uyene' list item
            Mouse.Click(uIUyeneListItem, new Point(41, 9));

            // Click 'ĐĂNG KÝ' button
            Mouse.Click(uIĐĂNGKÝButton, new Point(53, 17));
        }
        
        /// <summary>
        /// AssertMethod_MatKhauRong - Use 'AssertMethod_MatKhauRongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_MatKhauRong()
        {
            #region Variable Declarations
            WinEdit uIMậtkhẩukhôngđượcđểtrEdit = this.UIĐăngkýMozillaFirefoxWindow.UIItemCell.UIMậtkhẩukhôngđượcđểtrEdit;
            #endregion

            // Verify that the 'Name' property of 'Mật khẩu không được để trống.' text box is not equal to 'Mật khẩu không được để trống. '
            Assert.AreNotEqual(this.AssertMethod_MatKhauRongExpectedValues.UIMậtkhẩukhôngđượcđểtrEditName, uIMậtkhẩukhôngđượcđểtrEdit.Name);
        }
        
        /// <summary>
        /// RecordedMethod_TenDanhMucRong - Use 'RecordedMethod_TenDanhMucRongParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_TenDanhMucRong()
        {
            #region Variable Declarations
            WinCustom uIItemCustom = this.UITrangchủMozillaFirefWindow7.UIItemPropertyPage.UIItemCustom;
            WinEdit uIEmailEdit = this.UITrangchủMozillaFirefWindow8.UIĐăngnhậpDocument.UIEmailEdit;
            WinListItem uIPhuonguyenListItem = this.UIItemWindow.UIItemList.UIPhuonguyenListItem;
            WinEdit uIPasswordEdit = this.UITrangchủMozillaFirefWindow8.UIĐăngnhậpDocument.UIPasswordEdit;
            WinButton uILOGINButton = this.UITrangchủMozillaFirefWindow8.UIĐăngnhậpDocument.UILOGINButton;
            WinEdit uIQUẢNLÝDANHMỤCEdit = this.UITrangchủMozillaFirefWindow9.UIQUẢNLÝDANHMỤCHyperlink.UIQUẢNLÝDANHMỤCEdit;
            WinEdit uITHÊMMỚIEdit = this.UITrangchủMozillaFirefWindow10.UITHÊMMỚIHyperlink.UITHÊMMỚIEdit;
            WinButton uITẠOMỚIButton = this.UITrangchủMozillaFirefWindow11.UIItemGroup.UITẠOMỚIButton;
            #endregion

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(453, 29));

            // Click 'Email' text box
            Mouse.Click(uIEmailEdit, new Point(124, 24));

            // Click 'phuonguyen' list item
            Mouse.Click(uIPhuonguyenListItem, new Point(121, 11));

            // Click 'Password' text box
            Mouse.Click(uIPasswordEdit, new Point(105, 22));

            // Type '********' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit, this.RecordedMethod_TenDanhMucRongParams.UIPasswordEditSendKeys, true);

            // Click 'LOGIN' button
            Mouse.Click(uILOGINButton, new Point(126, 40));

            // Click 'QUẢN LÝ DANH MỤC' text box
            Mouse.Click(uIQUẢNLÝDANHMỤCEdit, new Point(70, 0));

            // Click 'THÊM MỚI' text box
            Mouse.Click(uITHÊMMỚIEdit, new Point(35, 12));

            // Click 'TẠO MỚI' button
            Mouse.Click(uITẠOMỚIButton, new Point(36, 18));
        }
        
        /// <summary>
        /// AssertMethod_TenDanhMucRong - Use 'AssertMethod_TenDanhMucRongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_TenDanhMucRong()
        {
            #region Variable Declarations
            WinEdit uITêndanhmụckhôngđượcđEdit = this.UITrangchủMozillaFirefWindow11.UIItemGroup.UITêndanhmụckhôngđượcđEdit;
            #endregion

            // Verify that the 'Name' property of 'Tên danh mục không được để trống' text box is not equal to 'Tên danh mục không được để trống'
            Assert.AreNotEqual(this.AssertMethod_TenDanhMucRongExpectedValues.UITêndanhmụckhôngđượcđEditName, uITêndanhmụckhôngđượcđEdit.Name);
        }
        
        #region Properties
        public virtual TenDangNhapRongExpectedValues TenDangNhapRongExpectedValues
        {
            get
            {
                if ((this.mTenDangNhapRongExpectedValues == null))
                {
                    this.mTenDangNhapRongExpectedValues = new TenDangNhapRongExpectedValues();
                }
                return this.mTenDangNhapRongExpectedValues;
            }
        }
        
        public virtual AssertMethod_TenDangNhapRongExpectedValues AssertMethod_TenDangNhapRongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_TenDangNhapRongExpectedValues == null))
                {
                    this.mAssertMethod_TenDangNhapRongExpectedValues = new AssertMethod_TenDangNhapRongExpectedValues();
                }
                return this.mAssertMethod_TenDangNhapRongExpectedValues;
            }
        }
        
        public virtual AssertMethod_MatKhauRongExpectedValues AssertMethod_MatKhauRongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_MatKhauRongExpectedValues == null))
                {
                    this.mAssertMethod_MatKhauRongExpectedValues = new AssertMethod_MatKhauRongExpectedValues();
                }
                return this.mAssertMethod_MatKhauRongExpectedValues;
            }
        }
        
        public virtual RecordedMethod_TenDanhMucRongParams RecordedMethod_TenDanhMucRongParams
        {
            get
            {
                if ((this.mRecordedMethod_TenDanhMucRongParams == null))
                {
                    this.mRecordedMethod_TenDanhMucRongParams = new RecordedMethod_TenDanhMucRongParams();
                }
                return this.mRecordedMethod_TenDanhMucRongParams;
            }
        }
        
        public virtual AssertMethod_TenDanhMucRongExpectedValues AssertMethod_TenDanhMucRongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_TenDanhMucRongExpectedValues == null))
                {
                    this.mAssertMethod_TenDanhMucRongExpectedValues = new AssertMethod_TenDanhMucRongExpectedValues();
                }
                return this.mAssertMethod_TenDanhMucRongExpectedValues;
            }
        }
        
        public UIĐăngkýMozillaFirefoxWindow UIĐăngkýMozillaFirefoxWindow
        {
            get
            {
                if ((this.mUIĐăngkýMozillaFirefoxWindow == null))
                {
                    this.mUIĐăngkýMozillaFirefoxWindow = new UIĐăngkýMozillaFirefoxWindow();
                }
                return this.mUIĐăngkýMozillaFirefoxWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UITrangchủMozillaFirefWindow UITrangchủMozillaFirefWindow
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow == null))
                {
                    this.mUITrangchủMozillaFirefWindow = new UITrangchủMozillaFirefWindow();
                }
                return this.mUITrangchủMozillaFirefWindow;
            }
        }
        
        public UITeamViewerPanelWindow UITeamViewerPanelWindow
        {
            get
            {
                if ((this.mUITeamViewerPanelWindow == null))
                {
                    this.mUITeamViewerPanelWindow = new UITeamViewerPanelWindow();
                }
                return this.mUITeamViewerPanelWindow;
            }
        }
        
        public UITrangchủMozillaFirefWindow1 UITrangchủMozillaFirefWindow1
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow1 == null))
                {
                    this.mUITrangchủMozillaFirefWindow1 = new UITrangchủMozillaFirefWindow1();
                }
                return this.mUITrangchủMozillaFirefWindow1;
            }
        }
        
        public UITrangchủMozillaFirefWindow2 UITrangchủMozillaFirefWindow2
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow2 == null))
                {
                    this.mUITrangchủMozillaFirefWindow2 = new UITrangchủMozillaFirefWindow2();
                }
                return this.mUITrangchủMozillaFirefWindow2;
            }
        }
        
        public UITrangchủMozillaFirefWindow3 UITrangchủMozillaFirefWindow3
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow3 == null))
                {
                    this.mUITrangchủMozillaFirefWindow3 = new UITrangchủMozillaFirefWindow3();
                }
                return this.mUITrangchủMozillaFirefWindow3;
            }
        }
        
        public UITrangchủMozillaFirefWindow4 UITrangchủMozillaFirefWindow4
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow4 == null))
                {
                    this.mUITrangchủMozillaFirefWindow4 = new UITrangchủMozillaFirefWindow4();
                }
                return this.mUITrangchủMozillaFirefWindow4;
            }
        }
        
        public UITrangchủMozillaFirefWindow5 UITrangchủMozillaFirefWindow5
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow5 == null))
                {
                    this.mUITrangchủMozillaFirefWindow5 = new UITrangchủMozillaFirefWindow5();
                }
                return this.mUITrangchủMozillaFirefWindow5;
            }
        }
        
        public UITrangchủMozillaFirefWindow6 UITrangchủMozillaFirefWindow6
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow6 == null))
                {
                    this.mUITrangchủMozillaFirefWindow6 = new UITrangchủMozillaFirefWindow6();
                }
                return this.mUITrangchủMozillaFirefWindow6;
            }
        }
        
        public UITrangchủMozillaFirefWindow7 UITrangchủMozillaFirefWindow7
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow7 == null))
                {
                    this.mUITrangchủMozillaFirefWindow7 = new UITrangchủMozillaFirefWindow7();
                }
                return this.mUITrangchủMozillaFirefWindow7;
            }
        }
        
        public UITrangchủMozillaFirefWindow8 UITrangchủMozillaFirefWindow8
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow8 == null))
                {
                    this.mUITrangchủMozillaFirefWindow8 = new UITrangchủMozillaFirefWindow8();
                }
                return this.mUITrangchủMozillaFirefWindow8;
            }
        }
        
        public UITrangchủMozillaFirefWindow9 UITrangchủMozillaFirefWindow9
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow9 == null))
                {
                    this.mUITrangchủMozillaFirefWindow9 = new UITrangchủMozillaFirefWindow9();
                }
                return this.mUITrangchủMozillaFirefWindow9;
            }
        }
        
        public UITrangchủMozillaFirefWindow10 UITrangchủMozillaFirefWindow10
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow10 == null))
                {
                    this.mUITrangchủMozillaFirefWindow10 = new UITrangchủMozillaFirefWindow10();
                }
                return this.mUITrangchủMozillaFirefWindow10;
            }
        }
        
        public UITrangchủMozillaFirefWindow11 UITrangchủMozillaFirefWindow11
        {
            get
            {
                if ((this.mUITrangchủMozillaFirefWindow11 == null))
                {
                    this.mUITrangchủMozillaFirefWindow11 = new UITrangchủMozillaFirefWindow11();
                }
                return this.mUITrangchủMozillaFirefWindow11;
            }
        }
        
        public UITrangchủGoogleChromeWindow UITrangchủGoogleChromeWindow
        {
            get
            {
                if ((this.mUITrangchủGoogleChromeWindow == null))
                {
                    this.mUITrangchủGoogleChromeWindow = new UITrangchủGoogleChromeWindow();
                }
                return this.mUITrangchủGoogleChromeWindow;
            }
        }
        #endregion
        
        #region Fields
        private TenDangNhapRongExpectedValues mTenDangNhapRongExpectedValues;
        
        private AssertMethod_TenDangNhapRongExpectedValues mAssertMethod_TenDangNhapRongExpectedValues;
        
        private AssertMethod_MatKhauRongExpectedValues mAssertMethod_MatKhauRongExpectedValues;
        
        private RecordedMethod_TenDanhMucRongParams mRecordedMethod_TenDanhMucRongParams;
        
        private AssertMethod_TenDanhMucRongExpectedValues mAssertMethod_TenDanhMucRongExpectedValues;
        
        private UIĐăngkýMozillaFirefoxWindow mUIĐăngkýMozillaFirefoxWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UITrangchủMozillaFirefWindow mUITrangchủMozillaFirefWindow;
        
        private UITeamViewerPanelWindow mUITeamViewerPanelWindow;
        
        private UITrangchủMozillaFirefWindow1 mUITrangchủMozillaFirefWindow1;
        
        private UITrangchủMozillaFirefWindow2 mUITrangchủMozillaFirefWindow2;
        
        private UITrangchủMozillaFirefWindow3 mUITrangchủMozillaFirefWindow3;
        
        private UITrangchủMozillaFirefWindow4 mUITrangchủMozillaFirefWindow4;
        
        private UITrangchủMozillaFirefWindow5 mUITrangchủMozillaFirefWindow5;
        
        private UITrangchủMozillaFirefWindow6 mUITrangchủMozillaFirefWindow6;
        
        private UITrangchủMozillaFirefWindow7 mUITrangchủMozillaFirefWindow7;
        
        private UITrangchủMozillaFirefWindow8 mUITrangchủMozillaFirefWindow8;
        
        private UITrangchủMozillaFirefWindow9 mUITrangchủMozillaFirefWindow9;
        
        private UITrangchủMozillaFirefWindow10 mUITrangchủMozillaFirefWindow10;
        
        private UITrangchủMozillaFirefWindow11 mUITrangchủMozillaFirefWindow11;
        
        private UITrangchủGoogleChromeWindow mUITrangchủGoogleChromeWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TenDangNhapRong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class TenDangNhapRongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Tên đăng nhập không được để trống.' text box equals 'Tên đăng nhập không được để trống'
        /// </summary>
        public string UITênđăngnhậpkhôngđượcEditControlType = "Tên đăng nhập không được để trống";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Tên đăng nhập không được để trống.' text box equals 'Edit'
        /// </summary>
        public string UITênđăngnhậpkhôngđượcEditControlType1 = "Edit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_TenDangNhapRong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod_TenDangNhapRongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Tên đăng nhập không được để trống.' text box is not equal to '"Tên đăng nhập không được để trống."'
        /// </summary>
        public string UITênđăngnhậpkhôngđượcEditControlType = "\"Tên đăng nhập không được để trống.\"";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_MatKhauRong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod_MatKhauRongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Mật khẩu không được để trống.' text box is not equal to 'Mật khẩu không được để trống. '
        /// </summary>
        public string UIMậtkhẩukhôngđượcđểtrEditName = "Mật khẩu không được để trống. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_TenDanhMucRong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod_TenDanhMucRongParams
    {
        
        #region Fields
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "Z835TI3Zgo+8MJILOxSrXLJcmYbtHJ+Y";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_TenDanhMucRong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod_TenDanhMucRongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Tên danh mục không được để trống' text box is not equal to 'Tên danh mục không được để trống'
        /// </summary>
        public string UITêndanhmụckhôngđượcđEditName = "Tên danh mục không được để trống";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIĐăngkýMozillaFirefoxWindow : WinWindow
    {
        
        public UIĐăngkýMozillaFirefoxWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Đăng ký - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIItemCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell(this);
                }
                return this.mUIItemCell;
            }
        }
        
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public UIĐăngkýHyperlink UIĐăngkýHyperlink
        {
            get
            {
                if ((this.mUIĐăngkýHyperlink == null))
                {
                    this.mUIĐăngkýHyperlink = new UIĐăngkýHyperlink(this);
                }
                return this.mUIĐăngkýHyperlink;
            }
        }
        
        public UIItemGroup UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new UIItemGroup(this);
                }
                return this.mUIItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell mUIItemCell;
        
        private UIItemTable mUIItemTable;
        
        private UIĐăngkýHyperlink mUIĐăngkýHyperlink;
        
        private UIItemGroup mUIItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell : WinCell
    {
        
        public UIItemCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinButton UIĐĂNGKÝButton
        {
            get
            {
                if ((this.mUIĐĂNGKÝButton == null))
                {
                    this.mUIĐĂNGKÝButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIĐĂNGKÝButton.SearchProperties[WinButton.PropertyNames.Name] = "ĐĂNG KÝ";
                    this.mUIĐĂNGKÝButton.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIĐĂNGKÝButton;
            }
        }
        
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WinEdit UITênđăngnhậpkhôngđượcEdit
        {
            get
            {
                if ((this.mUITênđăngnhậpkhôngđượcEdit == null))
                {
                    this.mUITênđăngnhậpkhôngđượcEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITênđăngnhậpkhôngđượcEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Tên đăng nhập không được để trống. ";
                    this.mUITênđăngnhậpkhôngđượcEdit.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUITênđăngnhậpkhôngđượcEdit;
            }
        }
        
        public WinEdit UIMậtkhẩukhôngđượcđểtrEdit
        {
            get
            {
                if ((this.mUIMậtkhẩukhôngđượcđểtrEdit == null))
                {
                    this.mUIMậtkhẩukhôngđượcđểtrEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIMậtkhẩukhôngđượcđểtrEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Mật khẩu không được để trống. ";
                    this.mUIMậtkhẩukhôngđượcđểtrEdit.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIMậtkhẩukhôngđượcđểtrEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIĐĂNGKÝButton;
        
        private WinEdit mUIItemEdit;
        
        private WinEdit mUITênđăngnhậpkhôngđượcEdit;
        
        private WinEdit mUIMậtkhẩukhôngđượcđểtrEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemTable : WinTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIItemRow UIItemRow
        {
            get
            {
                if ((this.mUIItemRow == null))
                {
                    this.mUIItemRow = new UIItemRow(this);
                }
                return this.mUIItemRow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemRow mUIItemRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemRow : WinRow
    {
        
        public UIItemRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIItemCell.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIĐăngkýHyperlink : WinHyperlink
    {
        
        public UIĐăngkýHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Đăng ký";
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIĐăngkýEdit
        {
            get
            {
                if ((this.mUIĐăngkýEdit == null))
                {
                    this.mUIĐăngkýEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIĐăngkýEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Đăng ký";
                    this.mUIĐăngkýEdit.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIĐăngkýEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIĐăngkýEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemGroup : WinGroup
    {
        
        public UIItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemList.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItem140LêTrọngTấnText UIItem140LêTrọngTấnText
        {
            get
            {
                if ((this.mUIItem140LêTrọngTấnText == null))
                {
                    this.mUIItem140LêTrọngTấnText = new UIItem140LêTrọngTấnText(this);
                }
                return this.mUIItem140LêTrọngTấnText;
            }
        }
        
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        
        public UIItem0916272248Text UIItem0916272248Text
        {
            get
            {
                if ((this.mUIItem0916272248Text == null))
                {
                    this.mUIItem0916272248Text = new UIItem0916272248Text(this);
                }
                return this.mUIItem0916272248Text;
            }
        }
        
        public UIUyeneText UIUyeneText
        {
            get
            {
                if ((this.mUIUyeneText == null))
                {
                    this.mUIUyeneText = new UIUyeneText(this);
                }
                return this.mUIUyeneText;
            }
        }
        
        public UIItemPane UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new UIItemPane(this);
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private UIItem140LêTrọngTấnText mUIItem140LêTrọngTấnText;
        
        private UIItemList mUIItemList;
        
        private UIItem0916272248Text mUIItem0916272248Text;
        
        private UIUyeneText mUIUyeneText;
        
        private UIItemPane mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItem140LêTrọngTấnText : WinText
    {
        
        public UIItem140LêTrọngTấnText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "140 Lê Trọng Tấn";
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItem140LêTrọngTấnEdit
        {
            get
            {
                if ((this.mUIItem140LêTrọngTấnEdit == null))
                {
                    this.mUIItem140LêTrọngTấnEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItem140LêTrọngTấnEdit.SearchProperties[WinEdit.PropertyNames.Name] = "140 Lê Trọng Tấn";
                    #endregion
                }
                return this.mUIItem140LêTrọngTấnEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItem140LêTrọngTấnEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemList : WinList
    {
        
        public UIItemList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            this.WindowTitles.Add("Đăng nhập - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinListItem UISfdsđListItem
        {
            get
            {
                if ((this.mUISfdsđListItem == null))
                {
                    this.mUISfdsđListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUISfdsđListItem.SearchProperties[WinListItem.PropertyNames.Name] = "sfdsđ";
                    #endregion
                }
                return this.mUISfdsđListItem;
            }
        }
        
        public WinListItem UIPhươngUyênListItem
        {
            get
            {
                if ((this.mUIPhươngUyênListItem == null))
                {
                    this.mUIPhươngUyênListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIPhươngUyênListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Phương Uyên";
                    #endregion
                }
                return this.mUIPhươngUyênListItem;
            }
        }
        
        public WinListItem UIItem140LêTrọngTấnListItem
        {
            get
            {
                if ((this.mUIItem140LêTrọngTấnListItem == null))
                {
                    this.mUIItem140LêTrọngTấnListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItem140LêTrọngTấnListItem.SearchProperties[WinListItem.PropertyNames.Name] = "140 Lê Trọng Tấn";
                    #endregion
                }
                return this.mUIItem140LêTrọngTấnListItem;
            }
        }
        
        public WinListItem UIItem0916272248ListItem
        {
            get
            {
                if ((this.mUIItem0916272248ListItem == null))
                {
                    this.mUIItem0916272248ListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItem0916272248ListItem.SearchProperties[WinListItem.PropertyNames.Name] = "0916272248";
                    #endregion
                }
                return this.mUIItem0916272248ListItem;
            }
        }
        
        public WinListItem UIUyeneListItem
        {
            get
            {
                if ((this.mUIUyeneListItem == null))
                {
                    this.mUIUyeneListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIUyeneListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Uyene";
                    #endregion
                }
                return this.mUIUyeneListItem;
            }
        }
        
        public WinListItem UIPhuonguyenListItem
        {
            get
            {
                if ((this.mUIPhuonguyenListItem == null))
                {
                    this.mUIPhuonguyenListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIPhuonguyenListItem.SearchProperties[WinListItem.PropertyNames.Name] = "phuonguyen";
                    #endregion
                }
                return this.mUIPhuonguyenListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUISfdsđListItem;
        
        private WinListItem mUIPhươngUyênListItem;
        
        private WinListItem mUIItem140LêTrọngTấnListItem;
        
        private WinListItem mUIItem0916272248ListItem;
        
        private WinListItem mUIUyeneListItem;
        
        private WinListItem mUIPhuonguyenListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItem0916272248Text : WinText
    {
        
        public UIItem0916272248Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "0916272248";
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItem0916272248Edit
        {
            get
            {
                if ((this.mUIItem0916272248Edit == null))
                {
                    this.mUIItem0916272248Edit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItem0916272248Edit.SearchProperties[WinEdit.PropertyNames.Name] = "0916272248";
                    #endregion
                }
                return this.mUIItem0916272248Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItem0916272248Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUyeneText : WinText
    {
        
        public UIUyeneText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Uyene";
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUyeneEdit
        {
            get
            {
                if ((this.mUIUyeneEdit == null))
                {
                    this.mUIUyeneEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUyeneEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Uyene";
                    #endregion
                }
                return this.mUIUyeneEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUyeneEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemPane : WinPane
    {
        
        public UIItemPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public WinPane UIItemPane1
        {
            get
            {
                if ((this.mUIItemPane1 == null))
                {
                    this.mUIItemPane1 = new WinPane(this);
                    #region Search Criteria
                    this.mUIItemPane1.SearchProperties[WinControl.PropertyNames.Instance] = "3";
                    #endregion
                }
                return this.mUIItemPane1;
            }
        }
        #endregion
        
        #region Fields
        private WinPane mUIItemPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIĐăngnhậpHyperlink UIĐăngnhậpHyperlink
        {
            get
            {
                if ((this.mUIĐăngnhậpHyperlink == null))
                {
                    this.mUIĐăngnhậpHyperlink = new UIĐăngnhậpHyperlink(this);
                }
                return this.mUIĐăngnhậpHyperlink;
            }
        }
        
        public UIĐăngkýHyperlink1 UIĐăngkýHyperlink
        {
            get
            {
                if ((this.mUIĐăngkýHyperlink == null))
                {
                    this.mUIĐăngkýHyperlink = new UIĐăngkýHyperlink1(this);
                }
                return this.mUIĐăngkýHyperlink;
            }
        }
        
        public UIItemCell1 UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell1(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIĐăngnhậpHyperlink mUIĐăngnhậpHyperlink;
        
        private UIĐăngkýHyperlink1 mUIĐăngkýHyperlink;
        
        private UIItemCell1 mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIĐăngnhậpHyperlink : WinHyperlink
    {
        
        public UIĐăngnhậpHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Đăng nhập";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIĐăngnhậpEdit
        {
            get
            {
                if ((this.mUIĐăngnhậpEdit == null))
                {
                    this.mUIĐăngnhậpEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIĐăngnhậpEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Đăng nhập";
                    this.mUIĐăngnhậpEdit.WindowTitles.Add("Trang chủ - Mozilla Firefox");
                    #endregion
                }
                return this.mUIĐăngnhậpEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIĐăngnhậpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIĐăngkýHyperlink1 : WinHyperlink
    {
        
        public UIĐăngkýHyperlink1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Đăng ký";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIĐăngkýEdit
        {
            get
            {
                if ((this.mUIĐăngkýEdit == null))
                {
                    this.mUIĐăngkýEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIĐăngkýEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Đăng ký";
                    this.mUIĐăngkýEdit.WindowTitles.Add("Trang chủ - Mozilla Firefox");
                    #endregion
                }
                return this.mUIĐăngkýEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIĐăngkýEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell1 : WinCell
    {
        
        public UIItemCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WinButton UIĐĂNGKÝButton
        {
            get
            {
                if ((this.mUIĐĂNGKÝButton == null))
                {
                    this.mUIĐĂNGKÝButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIĐĂNGKÝButton.SearchProperties[WinButton.PropertyNames.Name] = "ĐĂNG KÝ";
                    this.mUIĐĂNGKÝButton.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIĐĂNGKÝButton;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        
        private WinButton mUIĐĂNGKÝButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITeamViewerPanelWindow : WinWindow
    {
        
        public UITeamViewerPanelWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "TeamViewer Panel";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TV_ControlWin";
            this.WindowTitles.Add("TeamViewer Panel");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "17";
            this.WindowTitles.Add("TeamViewer Panel");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.WindowTitles.Add("TeamViewer Panel");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow1 : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIĐăngkýHyperlink2 UIĐăngkýHyperlink
        {
            get
            {
                if ((this.mUIĐăngkýHyperlink == null))
                {
                    this.mUIĐăngkýHyperlink = new UIĐăngkýHyperlink2(this);
                }
                return this.mUIĐăngkýHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIĐăngkýHyperlink2 mUIĐăngkýHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIĐăngkýHyperlink2 : WinHyperlink
    {
        
        public UIĐăngkýHyperlink2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Đăng ký";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIĐăngkýEdit
        {
            get
            {
                if ((this.mUIĐăngkýEdit == null))
                {
                    this.mUIĐăngkýEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIĐăngkýEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Đăng ký";
                    this.mUIĐăngkýEdit.WindowTitles.Add("Trang chủ - Mozilla Firefox");
                    #endregion
                }
                return this.mUIĐăngkýEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIĐăngkýEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow2 : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIItemCell2 UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell2(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell2 mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell2 : WinCell
    {
        
        public UIItemCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow3 : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow3()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIItemCell3 UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell3(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell3 mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell3 : WinCell
    {
        
        public UIItemCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinButton UIĐĂNGKÝButton
        {
            get
            {
                if ((this.mUIĐĂNGKÝButton == null))
                {
                    this.mUIĐĂNGKÝButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIĐĂNGKÝButton.SearchProperties[WinButton.PropertyNames.Name] = "ĐĂNG KÝ";
                    this.mUIĐĂNGKÝButton.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIĐĂNGKÝButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIĐĂNGKÝButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow4 : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow4()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIĐăngkýHyperlink3 UIĐăngkýHyperlink
        {
            get
            {
                if ((this.mUIĐăngkýHyperlink == null))
                {
                    this.mUIĐăngkýHyperlink = new UIĐăngkýHyperlink3(this);
                }
                return this.mUIĐăngkýHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIĐăngkýHyperlink3 mUIĐăngkýHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIĐăngkýHyperlink3 : WinHyperlink
    {
        
        public UIĐăngkýHyperlink3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Đăng ký";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIĐăngkýEdit
        {
            get
            {
                if ((this.mUIĐăngkýEdit == null))
                {
                    this.mUIĐăngkýEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIĐăngkýEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Đăng ký";
                    this.mUIĐăngkýEdit.WindowTitles.Add("Trang chủ - Mozilla Firefox");
                    #endregion
                }
                return this.mUIĐăngkýEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIĐăngkýEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow5 : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow5()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIItemCell4 UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell4(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell4 mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell4 : WinCell
    {
        
        public UIItemCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow6 : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow6()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIItemCell5 UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell5(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell5 mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell5 : WinCell
    {
        
        public UIItemCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Đăng ký - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinButton UIĐĂNGKÝButton
        {
            get
            {
                if ((this.mUIĐĂNGKÝButton == null))
                {
                    this.mUIĐĂNGKÝButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIĐĂNGKÝButton.SearchProperties[WinButton.PropertyNames.Name] = "ĐĂNG KÝ";
                    this.mUIĐĂNGKÝButton.WindowTitles.Add("Đăng ký - Mozilla Firefox");
                    #endregion
                }
                return this.mUIĐĂNGKÝButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIĐĂNGKÝButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow7 : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow7()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            this.WindowTitles.Add("Đăng nhập - Mozilla Firefox");
            this.WindowTitles.Add("Trang chủ admin - Mozilla Firefox");
            this.WindowTitles.Add("Danh mục - Mozilla Firefox");
            this.WindowTitles.Add("Thêm danh mục - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIItemPropertyPage UIItemPropertyPage
        {
            get
            {
                if ((this.mUIItemPropertyPage == null))
                {
                    this.mUIItemPropertyPage = new UIItemPropertyPage(this);
                }
                return this.mUIItemPropertyPage;
            }
        }
        #endregion
        
        #region Fields
        private UIItemPropertyPage mUIItemPropertyPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemPropertyPage : WinControl
    {
        
        public UIItemPropertyPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.WindowTitles.Add("Trang chủ - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow8 : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow8()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            this.WindowTitles.Add("Đăng nhập - Mozilla Firefox");
            this.WindowTitles.Add("Trang chủ admin - Mozilla Firefox");
            this.WindowTitles.Add("Danh mục - Mozilla Firefox");
            this.WindowTitles.Add("Thêm danh mục - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIĐăngnhậpDocument UIĐăngnhậpDocument
        {
            get
            {
                if ((this.mUIĐăngnhậpDocument == null))
                {
                    this.mUIĐăngnhậpDocument = new UIĐăngnhậpDocument(this);
                }
                return this.mUIĐăngnhậpDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIĐăngnhậpDocument mUIĐăngnhậpDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIĐăngnhậpDocument : WinControl
    {
        
        public UIĐăngnhậpDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Đăng nhập";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Đăng nhập - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.WindowTitles.Add("Đăng nhập - Mozilla Firefox");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public WinEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.WindowTitles.Add("Đăng nhập - Mozilla Firefox");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public WinButton UILOGINButton
        {
            get
            {
                if ((this.mUILOGINButton == null))
                {
                    this.mUILOGINButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILOGINButton.SearchProperties[WinButton.PropertyNames.Name] = "LOGIN";
                    this.mUILOGINButton.WindowTitles.Add("Đăng nhập - Mozilla Firefox");
                    #endregion
                }
                return this.mUILOGINButton;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIEmailEdit;
        
        private WinEdit mUIPasswordEdit;
        
        private WinButton mUILOGINButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow9 : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow9()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            this.WindowTitles.Add("Đăng nhập - Mozilla Firefox");
            this.WindowTitles.Add("Trang chủ admin - Mozilla Firefox");
            this.WindowTitles.Add("Danh mục - Mozilla Firefox");
            this.WindowTitles.Add("Thêm danh mục - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIQUẢNLÝDANHMỤCHyperlink UIQUẢNLÝDANHMỤCHyperlink
        {
            get
            {
                if ((this.mUIQUẢNLÝDANHMỤCHyperlink == null))
                {
                    this.mUIQUẢNLÝDANHMỤCHyperlink = new UIQUẢNLÝDANHMỤCHyperlink(this);
                }
                return this.mUIQUẢNLÝDANHMỤCHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIQUẢNLÝDANHMỤCHyperlink mUIQUẢNLÝDANHMỤCHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIQUẢNLÝDANHMỤCHyperlink : WinHyperlink
    {
        
        public UIQUẢNLÝDANHMỤCHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "QUẢN LÝ DANH MỤC";
            this.WindowTitles.Add("Trang chủ admin - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIQUẢNLÝDANHMỤCEdit
        {
            get
            {
                if ((this.mUIQUẢNLÝDANHMỤCEdit == null))
                {
                    this.mUIQUẢNLÝDANHMỤCEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIQUẢNLÝDANHMỤCEdit.SearchProperties[WinEdit.PropertyNames.Name] = "QUẢN LÝ DANH MỤC";
                    this.mUIQUẢNLÝDANHMỤCEdit.WindowTitles.Add("Trang chủ admin - Mozilla Firefox");
                    #endregion
                }
                return this.mUIQUẢNLÝDANHMỤCEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIQUẢNLÝDANHMỤCEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow10 : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow10()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            this.WindowTitles.Add("Đăng nhập - Mozilla Firefox");
            this.WindowTitles.Add("Trang chủ admin - Mozilla Firefox");
            this.WindowTitles.Add("Danh mục - Mozilla Firefox");
            this.WindowTitles.Add("Thêm danh mục - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UITHÊMMỚIHyperlink UITHÊMMỚIHyperlink
        {
            get
            {
                if ((this.mUITHÊMMỚIHyperlink == null))
                {
                    this.mUITHÊMMỚIHyperlink = new UITHÊMMỚIHyperlink(this);
                }
                return this.mUITHÊMMỚIHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UITHÊMMỚIHyperlink mUITHÊMMỚIHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITHÊMMỚIHyperlink : WinHyperlink
    {
        
        public UITHÊMMỚIHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "THÊM MỚI";
            this.WindowTitles.Add("Danh mục - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UITHÊMMỚIEdit
        {
            get
            {
                if ((this.mUITHÊMMỚIEdit == null))
                {
                    this.mUITHÊMMỚIEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITHÊMMỚIEdit.SearchProperties[WinEdit.PropertyNames.Name] = "THÊM MỚI";
                    this.mUITHÊMMỚIEdit.WindowTitles.Add("Danh mục - Mozilla Firefox");
                    #endregion
                }
                return this.mUITHÊMMỚIEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITHÊMMỚIEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủMozillaFirefWindow11 : WinWindow
    {
        
        public UITrangchủMozillaFirefWindow11()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Trang chủ - Mozilla Firefox");
            this.WindowTitles.Add("Đăng nhập - Mozilla Firefox");
            this.WindowTitles.Add("Trang chủ admin - Mozilla Firefox");
            this.WindowTitles.Add("Danh mục - Mozilla Firefox");
            this.WindowTitles.Add("Thêm danh mục - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIItemGroup1 UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new UIItemGroup1(this);
                }
                return this.mUIItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGroup1 mUIItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemGroup1 : WinGroup
    {
        
        public UIItemGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Thêm danh mục - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinButton UITẠOMỚIButton
        {
            get
            {
                if ((this.mUITẠOMỚIButton == null))
                {
                    this.mUITẠOMỚIButton = new WinButton(this);
                    #region Search Criteria
                    this.mUITẠOMỚIButton.SearchProperties[WinButton.PropertyNames.Name] = "TẠO MỚI";
                    this.mUITẠOMỚIButton.WindowTitles.Add("Thêm danh mục - Mozilla Firefox");
                    #endregion
                }
                return this.mUITẠOMỚIButton;
            }
        }
        
        public WinEdit UITêndanhmụckhôngđượcđEdit
        {
            get
            {
                if ((this.mUITêndanhmụckhôngđượcđEdit == null))
                {
                    this.mUITêndanhmụckhôngđượcđEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITêndanhmụckhôngđượcđEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Tên danh mục không được để trống";
                    this.mUITêndanhmụckhôngđượcđEdit.WindowTitles.Add("Thêm danh mục - Mozilla Firefox");
                    #endregion
                }
                return this.mUITêndanhmụckhôngđượcđEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUITẠOMỚIButton;
        
        private WinEdit mUITêndanhmụckhôngđượcđEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITrangchủGoogleChromeWindow : WinWindow
    {
        
        public UITrangchủGoogleChromeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trang chủ - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("Trang chủ - Google Chrome");
            this.WindowTitles.Add("Đăng nhập - Google Chrome");
            this.WindowTitles.Add("Trang chủ admin - Google Chrome");
            this.WindowTitles.Add("Danh mục - Google Chrome");
            this.WindowTitles.Add("Thêm danh mục - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIChromeLegacyWindowWindow UIChromeLegacyWindowWindow
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow == null))
                {
                    this.mUIChromeLegacyWindowWindow = new UIChromeLegacyWindowWindow(this);
                }
                return this.mUIChromeLegacyWindowWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIChromeLegacyWindowWindow mUIChromeLegacyWindowWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIChromeLegacyWindowWindow : WinWindow
    {
        
        public UIChromeLegacyWindowWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Chrome Legacy Window";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_RenderWidgetHostHWND";
            this.WindowTitles.Add("Trang chủ - Google Chrome");
            this.WindowTitles.Add("Đăng nhập - Google Chrome");
            this.WindowTitles.Add("Trang chủ admin - Google Chrome");
            this.WindowTitles.Add("Danh mục - Google Chrome");
            this.WindowTitles.Add("Thêm danh mục - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UITrangchủGoogleChromeDocument
        {
            get
            {
                if ((this.mUITrangchủGoogleChromeDocument == null))
                {
                    this.mUITrangchủGoogleChromeDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUITrangchủGoogleChromeDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUITrangchủGoogleChromeDocument.WindowTitles.Add("Trang chủ - Google Chrome");
                    this.mUITrangchủGoogleChromeDocument.WindowTitles.Add("Đăng nhập - Google Chrome");
                    this.mUITrangchủGoogleChromeDocument.WindowTitles.Add("Trang chủ admin - Google Chrome");
                    this.mUITrangchủGoogleChromeDocument.WindowTitles.Add("Danh mục - Google Chrome");
                    this.mUITrangchủGoogleChromeDocument.WindowTitles.Add("Thêm danh mục - Google Chrome");
                    #endregion
                }
                return this.mUITrangchủGoogleChromeDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUITrangchủGoogleChromeDocument;
        #endregion
    }
}
